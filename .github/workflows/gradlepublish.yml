# This workflow will build a package using Gradle and then publish it to OSSRH when a release is created
# For more information see: https://github.com/actions/setup-java#publishing-using-gradle

name: Publish to OSSRH when released

on:
  release:
    types: [created]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Git Checkout
      uses: actions/checkout@v2
    - name: Set up JDK 1.8 (Current LTS Release)
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Build with Gradle Wrapper
      #run: ./gradlew build --warning-mode=fail
      run: ./gradlew build

    - name: Extract secring.gpg to sign files
      run: echo -n $SECRING_GPG | base64 --decode > secring.gpg && pwd && ls -al
      env:
        SECRING_GPG: ${{ secrets.SECRING_GPG }}

    # The GITHUB_REF tag comes in the format 'refs/tags/v0.0.1'. If we split on '/' and take the 3rd value, we can get the release version, e.g. v.0.0.1
    # We then remove the leading "v", e.g. 0.0.1
    - name: Publish to OSSRH
      run: |
        echo "Publishing: ${GITHUB_REF}"
        echo "${GITHUB_REF}" | cut -d "/" -f3 | grep --regexp '^v[[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\+$'
        echo "bbb"
        RELEASE_VERSION=$(echo "${GITHUB_REF}" | cut -d "/" -f3) | sed 's/v//')
        echo "New version: ${RELEASE_VERSION}"
        echo "Github username: ${GITHUB_ACTOR}"
        ./gradlew -Pversion=${RELEASE_VERSION} publish
      env:
        OSSRH_PWD: ${{ secrets.OSSRH_PWD }}
