plugins {
    id("com.github.johnrengelman.shadow")
    id("io.micronaut.application")

    // used for tests
    id("org.jetbrains.kotlin.jvm")
    id("org.jetbrains.kotlin.kapt")
    id("org.jetbrains.kotlin.plugin.allopen")
}

group = "info.novatec"

micronaut {
    runtime("jetty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("micronaut.camunda.bpm.externaltask.process.*")
    }
}

dependencies {
    implementation(project(":micronaut-camunda-bpm-feature"))
    implementation("io.micronaut:micronaut-runtime")
    implementation("org.camunda.bpm:camunda-engine-rest-jaxrs2:$camundaVersion")

    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("com.h2database:h2")

    kaptTest platform("io.micronaut:micronaut-bom:$micronautVersion")
    kaptTest("io.micronaut.data:micronaut-data-processor")
    kapt("io.micronaut:micronaut-inject-java:$micronautVersion")

    testImplementation("org.camunda.bpm.assert:camunda-bpm-assert:8.0.0")
    testImplementation("org.assertj:assertj-core")
}

application {
    mainClass.set("info.novatec.micronaut.camunda.externaltask.process.ExternalTaskProcessApplication")
}

java {
    sourceCompatibility = JavaVersion.toVersion("1.8")
    targetCompatibility = JavaVersion.toVersion("1.8")
}
