plugins {
    id("io.micronaut.library")
    id("java-library")
    id("org.jetbrains.kotlin.jvm")
    id("org.jetbrains.kotlin.kapt")
    id("org.jetbrains.kotlin.plugin.allopen")
    id("maven-publish")
}

group = "info.novatec"

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("micronaut.camunda.bpm.feature.*")
    }
}

dependencies {
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut:micronaut-runtime")
    api("org.camunda.bpm:camunda-engine:$camundaVersion")

    compileOnly("io.micronaut.servlet:micronaut-servlet-engine")
    compileOnly("io.micronaut:micronaut-http-server-netty")
    compileOnly("io.micronaut.servlet:micronaut-http-server-jetty")
    compileOnly("io.micronaut.servlet:micronaut-http-server-tomcat")
    compileOnly("io.micronaut.servlet:micronaut-http-server-undertow")

    compileOnly("org.eclipse.jetty:jetty-util:$jettyVersion")
    compileOnly("org.apache.tomcat.embed:tomcat-embed-core:$tomcatVersion")
    compileOnly("io.undertow:undertow-core:$undertowVersion")

    kaptTest platform("io.micronaut:micronaut-bom:$micronautVersion")
    kaptTest("io.micronaut.data:micronaut-data-processor")
    kapt("io.micronaut:micronaut-inject-java:$micronautVersion")

    // Integration of Transaction Management
    api("io.micronaut.data:micronaut-data-tx")
    api("io.micronaut.sql:micronaut-jdbc-hikari")

    // REST API + Webapps
    implementation("com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider")
    implementation("org.camunda.bpm:camunda-engine-rest:$camundaVersion:classes")
    implementation("org.camunda.bpm.webapp:camunda-webapp-webjar:$camundaVersion")
    implementation("org.glassfish.jersey.inject:jersey-hk2:$jerseyVersion")
    implementation("org.glassfish.jersey.containers:jersey-container-servlet-core:$jerseyVersion")
    implementation("org.glassfish.jersey.containers:jersey-container-servlet:$jerseyVersion")

    // Dependencies for Jetty
    implementation("org.eclipse.jetty:jetty-server:$jettyVersion")
    implementation("org.eclipse.jetty:jetty-servlet:$jettyVersion")

    // Test
    testImplementation("org.junit.jupiter:junit-jupiter-params")
    testImplementation("org.mockito:mockito-core:3.8.0")
    testImplementation("ch.qos.logback:logback-classic")
    testRuntimeOnly("com.h2database:h2")
    testRuntimeOnly("io.micronaut:micronaut-http-server-netty")
    testRuntimeOnly("org.codehaus.groovy:groovy-all:3.0.7") // as script engine
}

java {
    sourceCompatibility = JavaVersion.toVersion('1.8')
    targetCompatibility = JavaVersion.toVersion('1.8')
}

tasks {
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

// based on https://docs.gradle.org/current/userguide/publishing_maven.html#sec:modifying_the_generated_pom and https://central.sonatype.org/pages/requirements.html#sufficient-metadata
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = 'micronaut-camunda-bpm-feature'
                description = 'Integration between Micronaut and Camunda Process Engine'
                url = 'https://github.com/NovatecConsulting/micronaut-camunda-bpm'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        name = 'The micronaut-camunda-bpm Team at Novatec Consulting GmbH'
                        email = 'micronaut-camunda@novatec-gmbh.de'
                        organization = 'Novatec Consulting GmbH'
                        organizationUrl = 'https://www.novatec-gmbh.de'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/NovatecConsulting/micronaut-camunda-bpm.git'
                    developerConnection = 'scm:git:https://github.com/NovatecConsulting/micronaut-camunda-bpm.git'
                    url = 'https://github.com/NovatecConsulting/micronaut-camunda-bpm'
                }
            }
        }
    }
    repositories {
        mavenLocal()
    }
}

configurations {
    testArtifacts
}
